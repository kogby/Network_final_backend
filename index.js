import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import dotenv from "dotenv";
import mysql from "mysql2";
// import {db} from "./db.js";
import swaggerUi from "swagger-ui-express";
import fs from "fs";
import postRoutes from "./routes/post.js";

dotenv.config(); //這樣才能讀.env檔案


// 讀取生成的swagger api doc 檔案
let swaggerDocument = JSON.parse(
    fs.readFileSync("./swagger_output.json", "utf-8"),
);

const app = express();
const port = process.env.PORT || 4000;

app.use(bodyParser.json()); // 把req.body的內容轉換成json形式
app.use(cors()); // 允許CORS（不知道什麼是CORS的可以自己查）


app.use(
    "/api/doc",
    swaggerUi.serve,
    swaggerUi.setup(swaggerDocument),
);

app.use("/posts", postRoutes);


app.get("/", (req, res) => {
  /* #swagger.description = '看server是否運作' */
  return res.status(200).send("The server is running.");
});


var db = mysql.createConnection({
  // connectTimeout  : 60 * 60 * 1000,
  // Change it to the public IP generated by ngrok
  host: "0.tcp.jp.ngrok.io",
  port: process.env.DB_PORT,
  user: "root",
  password: "123456",
  database: "shoppingDB"
})

db.connect(function(err) {
  if (err) throw err;
  db.query("SHOW tables", function (err, result) {
    if (err) throw err;
    console.log(result);
  });
})


// The server is now listeing
app.listen(port, ()=>{
  console.log("The server is running on port: " + port);
})
